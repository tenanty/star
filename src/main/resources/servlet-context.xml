<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--扫描的部分-->
    <mvc:annotation-driven conversion-service="conversionService">
     <mvc:message-converters>  
        <bean class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
        <ref bean="mappingJacksonHttpMessageConverter"/>  
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
    </mvc:message-converters> 
    </mvc:annotation-driven>
    <!-- 读取属性文件 --> 
    <context:property-placeholder
		ignore-unresolvable="true" location="classpath:application.properties" />
    <!--排除扫描的包， 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.channelsoft">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!--配置不会被mvc拦截的请求 也就是资源请求-->
    <mvc:default-servlet-handler/>
    <!--<mvc:resources mapping="/js/**" location="/js/"/>-->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
          <property name="objectMapper">
            <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean" >
            </bean>
          </property>
    </bean>
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    </bean>
    <!--配置spring mvc的转发规则-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="defaultEncoding" value="UTF-8"/>
	    <property name="maxUploadSize" value="104857600"/>
	    <property name="maxInMemorySize" value="8192"/>
    </bean>
    <!-- 总错误处理 -->
    <bean id="exceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/reload</prop>
                <prop key="org.apache.shiro.authz.AuthorizationException">redirect:/reload</prop>
            </props>
        </property>
        <property name="defaultErrorView">
            <value>error</value>
        </property>
        <property name="defaultStatusCode">
            <value>500</value>
        </property>
        <property name="warnLogCategory">
            <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
            </value>
        </property>
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>