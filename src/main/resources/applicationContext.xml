<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="false">

	<!-- 读取属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:application.properties"/>

	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.channelsoft"/>
	<aop:aspectj-autoproxy/>
	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		  destroy-method="close">

		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}"/>
		<property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
		<property name="defaultAutoCommit" value="true"/>
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="3600000"/>
		<!-- 链接超时 -->
		<!-- <property name="testWhileIdle" value="true" /> -->
		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="${jdbc.validationQuery}"/>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>

	<bean id="jdbcDao" class="com.dexcoder.dal.spring.JdbcDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	<!--需要分页时声明-->
	<bean id="pageControl" class="com.dexcoder.dal.spring.page.PageControl"></bean>

	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate5.SpringSessionContext
				</prop>
			</props>
		</property>

		<property name="packagesToScan">
			<value>com.channelsoft.po</value>
		</property>
	</bean>

	<bean id="hibernateTemplate"
		  class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean id="genericService" class="ro.fortsoft.genericdata.service.GenericServiceImpl"></bean>
	<bean id="genericDAO" class="ro.fortsoft.genericdata.dao.GenericDAOImpl"></bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="txProxyTemplate" abstract="true"
		  class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="*">readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="query*">PROPAGATION_REQUIRED, readOnly,-Exception</prop>
				<prop key="count*">PROPAGATION_REQUIRED, readOnly,-Exception</prop>
				<prop key="auth*">PROPAGATION_REQUIRED, readOnly,-Exception</prop>
				<prop key="load*">PROPAGATION_REQUIRED, -Exception</prop>
			</props>
		</property>
	</bean>

</beans>
